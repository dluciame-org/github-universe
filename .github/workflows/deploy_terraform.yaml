name: Infra deploy with private runners

on: push

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  ARM_CLIENT_ID: "${{ secrets.CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
  ARM_USE_OIDC: true
  TF_VAR_github_token: ${{ secrets.GH_UNIVERSE }}

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: demo
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure using OIDC
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init # Important if we use OIDC auth

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Calculate destroy arg
        id: destroy_arg
        run: |
          if [ $DESTROY == "true" ]; then
            echo "val=-destroy" >> $GITHUB_OUTPUT
          else
            echo "val= " >> $GITHUB_OUTPUT
          fi
        env:
          DESTROY: ${{ inputs.destroy }}

      - name: Terraform Plan
        id: plan
        run: terraform plan $DESTROY

      - name: Upload the plan
        uses: actions/upload-artifact@v4.3.3 # We generate and artifact of the terraform plan and upload it for the next job to use
        with:
          name: artifact-${{ github.run_number }}-${{ github.run_attempt }}-tfplan
          path: ${{ inputs.tf_dir }}/out.tfplan

  apply:
    name: Terraform apply
    needs: [plan]
    runs-on: ubuntu-latest
    environment: demo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure using OIDC
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Download the plan
        uses: actions/download-artifact@v4.2.0 # We download the artifact we uploaded in the previous step
        with:
          name: artifact-${{ github.run_number }}-${{ github.run_attempt }}-tfplan
          path: ${{ inputs.tf_dir }}
          pattern: artifact-*
          merge-multiple: true

      - name: Apply the plan
        id: apply
        run: terraform apply -auto-approve out.tfplan # Terraform apply using the plan artifact
